/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { FactoryAbi, FactoryAbiInterface } from '../FactoryAbi'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_nft',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_verifier',
        type: 'address',
      },
    ],
    name: 'createVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class FactoryAbi__factory {
  static readonly abi = _abi
  static createInterface(): FactoryAbiInterface {
    return new utils.Interface(_abi) as FactoryAbiInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FactoryAbi {
    return new Contract(address, _abi, signerOrProvider) as FactoryAbi
  }
}
